#!/bin/sh
#
# mountx version 0.1 2022/27/08 git@github.com:philmcrakin/
#
# check for root/sudo
[ $(sudo whoami) == "root" ] || (echo "Please run with sudo" && exit 1);
# Yes, different code to check for root/sudo here than mountx.
# Im experimenting. with various methods Gotta love Bash.
sudo umount /dev/mapper/*map-point*;
sudo cryptsetup luksClose *map-point*
#
#***************************************************************************
# If it's mounted already, ls /dev/mapper to see your devices/partitions.
# Replace *map-point* in script with the name you chose. Ex: sdb2_crypt
#***************************************************************************
#
#
#***************************************************************************
# Place this file in your $PATH to enable it as a bash command
# call it from the terminal as root or 'sudo mountx'
#***************************************************************************
#
#
#***************************************************************************
# optionally edit your /etc/sudoers  or visudo /etc/sudoers.d/mountx_umountx
# and add the following lines:
# ALL     ALL = NOPASSWD: /home/deez/scripts/mountx
# ALL     ALL = NOPASSWD: /home/deez/scripts/umountx
#***************************************************************************
#
#
# Easily add custom commands to Thunar or other GUI apps to give
# right click context menu options.
#
# In the file manager on  the menu bar:
# Edit>Configure Custom Actions>       Click the +
# Name: 'Unmount Encrypted Device'
# Descr: 'Unmount, Close and Lock encrytped device/partition.'
# Command: x-terminal-emulator -e "bash -ic umountx"
# Keyboard Shorcut: Ctrl+Alt+U or whatever you want.
# Icon: choose a hard drive or similar from the list (type drive) to filter
#
# Now click the next tab 'Appearance Conditions'
# Pattern Matching: Backups ( or whatever you named your mountpoint )
# Tick the Directories box and click ok to save. This is will ensure that the
# umountx command is only available if you right click on a DIRECTORY with the
# name you choose for mountpoint. Besure you get mountx from this repo to
# add the mount capabilities.
#
#***************************************************************************
#***************************************************************************
echo -en "e[1;37m\e[44mhttps://github.com/philmcrakin/Bash_Scripts_and_Other_BS\033[0m"
#***************************************************************************
#***************************************************************************


