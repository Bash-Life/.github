#!/bin/sh
#
# mountx version 0.1 2022/27/08 git@github.com:philmcrakin/
#
# check for root/sudo
if [ "`id -u`" -ne 0 ]; then
 echo "Switching from `id -un` to root"
 exec sudo "$0"
 exit 99
fi
cryptsetup luksOpen /dev/sd* *map-point*
mount /dev/mapper/*map-point* /home/*username*/*map-point*
#
#***************************************************************************
# make sure to replace sd* with your device/partition (ex: /dev/sdb2 )
# use lsblk in terminal if you're unsure.
# use  ls /dev/mapper/  to see your *map-point* partition.
#***************************************************************************
#
#
#***************************************************************************
# use any name you want for *map-point* just make sure you use the
# same name for each *map-point* in the script. ( ex: sdb2_crypt )
#***************************************************************************
#
#
#***************************************************************************
# Place this file in your $PATH to enable it as a bash command
# call it from the terminal as root or 'sudo mountx'
#***************************************************************************
#
#
#***************************************************************************
# optionally edit your /etc/sudoers  or visudo/etc/sudoers.d/mountx_umountx
# and add the following lines:
# ALL     ALL = NOPASSWD: /home/deez/scripts/mountx
# ALL     ALL = NOPASSWD: /home/deez/scripts/umountx
#***************************************************************************
#
#
# Easily add custom commands to Thunar or other GUI apps to give
# right click context menu options.
#
# Create a mount point for the encrypted drive if you don't already have one:
# Ex: mkdir ~/Backups
#
# In the file manager on  the menu bar:
# Edit>Configure Custom Actions>       Click the +
# Name: 'Mount Encrypted Device Here'
# Descr: 'Mount an encrypted partition to this directory'
# Command: x-terminal-emulator -e "bash -ic mountx"
# Keyboard Shorcut: Ctrl+Alt+M or whatever you want.
# Icon: choose a hard drive or similar from the list (type drive) to filter
#
# Now click the next tab 'Appearance Conditions'
# Pattern Matching: Backups ( or whatever you named your mountpoint )
# Tick the Directories box and click ok to save. This is will ensure that the
# mountx command is only available if you right click on a DIRECTORY with the
# name you choose for mountpoint. Besure you get umountx from this repo to
# add the umount capabilities.
#
#***************************************************************************
#***************************************************************************
echo -en "e[1;37m\e[44mhttps://github.com/philmcrakin/Bash_Scripts_and_Other_BS\033[0m"
#***************************************************************************
#***************************************************************************



